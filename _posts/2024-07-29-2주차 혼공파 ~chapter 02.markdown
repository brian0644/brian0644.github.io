---
layout: post
title:  "ML 2주차 정리"
date:   2024-07-29 14:00 +09:00
categories: ML
---
# **ML 2주차 정리**
## 1-1. 인공지능과 머신러닝, 딥러닝
 * 인공지능 : 강인공지능(사람과 구분하기 어려울 정도의 지능을 가진) // 약인공지능(특정 분야에서 사람의 일을 도와주는 보조 역할)
 * 머신러닝 : 규칙을 일일이 프로그래밍하지 않아도 자동으로 데이터에서 규칙을 학습하는 알고리즘을 연구하는 분야
 * 딥러닝 : 머신러닝 알고리즘 중에 인공 신경망을 기반으로 한 방법들을 통칭하여 딥러닝이라고 부른다 << 텐서플로우라는 구글 딥러닝 라이브러리로

## 01-2 코랩과 주피터 노트북
 * 구글 코랩 : 웹 브라우저에서 무료로 파이썬 프로그램을 테스트하고 저장할 수 있는 서비스. 머신러닝 프로그램도 개발 가능. 클라우드 기반의 주피터 노트북 >> 컴퓨터 성능 상관 없음
<img width="1427" alt="스크린샷 2024-07-29 오후 2 19 51" src="https://github.com/user-attachments/assets/be193fe5-03f3-416f-b4b7-0126deccc427">
<br>
 * 텍스트 셀 : 텍스트를 입력는 창. 텍스트 셀에서는 HTML과 Markdown을 혼용해서 사용 가능
<img width="1352" alt="스크린샷 2024-07-29 오후 2 22 44" src="https://github.com/user-attachments/assets/82a7ad59-5d6c-40c9-9da1-af61e03aa213">

<img width="606" alt="스크린샷 2024-07-29 오후 2 26 37" src="https://github.com/user-attachments/assets/2f963898-12eb-4e88-8edf-fe029ba6c6aa">  

<img width="600" alt="스크린샷 2024-07-29 오후 2 37 09" src="https://github.com/user-attachments/assets/e1a9c092-5588-417c-ac6d-e02501ee49b2">

<br>
<br>
 * 코드 셀 : 코드를 입력하고 실행할 수 있는 창
<br>
<img width="343" alt="스크린샷 2024-07-29 오후 2 27 53" src="https://github.com/user-attachments/assets/27b1f1d9-b494-4295-ba6a-576043a24233">
<br>
<br>
 * 노트북 : 대화식 프로그래밍 환경. VM(가상 서버)를 통해 메모리 12기가 및 디스크 100기가까지 무료로 이용 가능, 그러나 코랩 노트북으로 동시에 사용할 수 있는 가상 서버는 최대 5개
 
## 01-3 마켓과 머신러닝
  
  
### 생선 분류 문제
  생선을 분류하기 위해서는 생선의 특징을 알면 쉽게 구분할 수 있을 것 
  -> 특징을 알아내고자 일단 도미의 데이터셋 생성  
  
```python
bream_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, 31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, 35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0]  # 도미의 길이
bream_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, 500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, 700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0] # 도미의 무게
```

 이렇게 단순히 데이터를 숫자로 보는 것보다 그래프로 표현하면 데이터를 잘 이해할 수 있음 -> matplotlib 패키지 임포트

```python
import matplotlib.pyplot as plt
plt.scatter(bream_length,bream_weight)
plt.xlabel("length")
plt.ylabel("weight")
plt.show()
```

 **결과 : 생선 길이에 따라 무게가 선형적으로 증가하는 관계로 해석 가능**
<img width="1014" alt="스크린샷 2024-07-29 오후 3 05 21" src="https://github.com/user-attachments/assets/5a8391ba-ac4c-4e78-83a6-4dde95d168d2">
  
 도미 데이터를 확인했으니 이제 빙어 데이터 준비 및 시각화
  
```python
smelt_length = [9.8, 10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0] # 빙어 길이
smelt_weight = [6.7, 7.5, 7.0, 9.7, 9.8, 8.7, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]        # 빙어 무게

plt.scatter(bream_length,bream_weight)
plt.scatter(smelt_length,smelt_weight)
plt.xlabel("length")
plt.ylabel("weight")
plt.show()
```

 **결과 : 빙어 데이터는 주황색, 빙어도 도미와 비슷하게 길이와 무게에 비례하지만 그 기울기가 도미보단 작아보임**




첫 번째 머신러닝 프로그램
도미와 빙어 분류

02-1 훈련세트와 테스트 세트
지도 학습과 비지도 학습
훈련 세트와 테스트 세트
샘플링 편향
넘파이
두 번째 머신러닝 프로그램



02-2 데이터 전처리
넘파이로 데이터 준비하기
사이킷런으로 훈련 세트와 테스트 세트 나누기
수상한 도미 한 마리
기준을 맞춰라
전처리 데이터로 모델 훈련하기
스케일이 다른 특성 처리##








